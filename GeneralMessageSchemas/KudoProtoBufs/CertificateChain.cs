// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: KudoProtoBufs/CertificateChain.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace VRWorlds.Schemas.Proto.Kudo {

  /// <summary>Holder for reflection information generated from KudoProtoBufs/CertificateChain.proto</summary>
  public static partial class CertificateChainReflection {

    #region Descriptor
    /// <summary>File descriptor for KudoProtoBufs/CertificateChain.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CertificateChainReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRLdWRvUHJvdG9CdWZzL0NlcnRpZmljYXRlQ2hhaW4ucHJvdG8SG1ZSV29y",
            "bGRzLlNjaGVtYXMuUHJvdG8uS3VkbxonU3RhbmRhcmRzUHJvdG9CdWZzL0Rh",
            "dGVUaW1lT2Zmc2V0LnByb3RvGh1TdGFuZGFyZHNQcm90b0J1ZnMvVVVJRC5w",
            "cm90bxokU3RhbmRhcmRzUHJvdG9CdWZzL0NlcnRpZmljYXRlLnByb3RvIlkK",
            "D0NlcnRpZmljYXRlTGlzdBJGCg9DZXJ0aWZpY2F0ZUxpc3QYASADKAsyLS5W",
            "Uldvcmxkcy5TY2hlbWFzLlByb3RvLlN0YW5kYXJkcy5DZXJ0aWZpY2F0ZSJW",
            "ChJDZXJ0aWZpY2F0ZVJlcXVlc3QSQAoQQ2VydGlmaWNhdGVVdWlkcxgBIAMo",
            "CzImLlZSV29ybGRzLlNjaGVtYXMuUHJvdG8uU3RhbmRhcmRzLlVVSUQyhAEK",
            "EENlcnRpZmljYXRlQ2hhaW4ScAoPR2V0Q2VydGlmaWNhdGVzEi8uVlJXb3Js",
            "ZHMuU2NoZW1hcy5Qcm90by5LdWRvLkNlcnRpZmljYXRlUmVxdWVzdBosLlZS",
            "V29ybGRzLlNjaGVtYXMuUHJvdG8uS3Vkby5DZXJ0aWZpY2F0ZUxpc3RiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::VRWorlds.Schemas.Proto.Standards.DateTimeOffsetReflection.Descriptor, global::VRWorlds.Schemas.Proto.Standards.UUIDReflection.Descriptor, global::VRWorlds.Schemas.Proto.Standards.CertificateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::VRWorlds.Schemas.Proto.Kudo.CertificateList), global::VRWorlds.Schemas.Proto.Kudo.CertificateList.Parser, new[]{ "CertificateList_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VRWorlds.Schemas.Proto.Kudo.CertificateRequest), global::VRWorlds.Schemas.Proto.Kudo.CertificateRequest.Parser, new[]{ "CertificateUuids" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CertificateList : pb::IMessage<CertificateList> {
    private static readonly pb::MessageParser<CertificateList> _parser = new pb::MessageParser<CertificateList>(() => new CertificateList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CertificateList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VRWorlds.Schemas.Proto.Kudo.CertificateChainReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CertificateList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CertificateList(CertificateList other) : this() {
      certificateList_ = other.certificateList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CertificateList Clone() {
      return new CertificateList(this);
    }

    /// <summary>Field number for the "CertificateList" field.</summary>
    public const int CertificateList_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::VRWorlds.Schemas.Proto.Standards.Certificate> _repeated_certificateList_codec
        = pb::FieldCodec.ForMessage(10, global::VRWorlds.Schemas.Proto.Standards.Certificate.Parser);
    private readonly pbc::RepeatedField<global::VRWorlds.Schemas.Proto.Standards.Certificate> certificateList_ = new pbc::RepeatedField<global::VRWorlds.Schemas.Proto.Standards.Certificate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::VRWorlds.Schemas.Proto.Standards.Certificate> CertificateList_ {
      get { return certificateList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CertificateList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CertificateList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!certificateList_.Equals(other.certificateList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= certificateList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      certificateList_.WriteTo(output, _repeated_certificateList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += certificateList_.CalculateSize(_repeated_certificateList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CertificateList other) {
      if (other == null) {
        return;
      }
      certificateList_.Add(other.certificateList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            certificateList_.AddEntriesFrom(input, _repeated_certificateList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CertificateRequest : pb::IMessage<CertificateRequest> {
    private static readonly pb::MessageParser<CertificateRequest> _parser = new pb::MessageParser<CertificateRequest>(() => new CertificateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CertificateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VRWorlds.Schemas.Proto.Kudo.CertificateChainReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CertificateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CertificateRequest(CertificateRequest other) : this() {
      certificateUuids_ = other.certificateUuids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CertificateRequest Clone() {
      return new CertificateRequest(this);
    }

    /// <summary>Field number for the "CertificateUuids" field.</summary>
    public const int CertificateUuidsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::VRWorlds.Schemas.Proto.Standards.UUID> _repeated_certificateUuids_codec
        = pb::FieldCodec.ForMessage(10, global::VRWorlds.Schemas.Proto.Standards.UUID.Parser);
    private readonly pbc::RepeatedField<global::VRWorlds.Schemas.Proto.Standards.UUID> certificateUuids_ = new pbc::RepeatedField<global::VRWorlds.Schemas.Proto.Standards.UUID>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::VRWorlds.Schemas.Proto.Standards.UUID> CertificateUuids {
      get { return certificateUuids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CertificateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CertificateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!certificateUuids_.Equals(other.certificateUuids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= certificateUuids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      certificateUuids_.WriteTo(output, _repeated_certificateUuids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += certificateUuids_.CalculateSize(_repeated_certificateUuids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CertificateRequest other) {
      if (other == null) {
        return;
      }
      certificateUuids_.Add(other.certificateUuids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            certificateUuids_.AddEntriesFrom(input, _repeated_certificateUuids_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
