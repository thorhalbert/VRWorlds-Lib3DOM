// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::FlatBuffers;

public struct Ping : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Ping GetRootAsPing(ByteBuffer _bb) { return GetRootAsPing(_bb, new Ping()); }
  public static Ping GetRootAsPing(ByteBuffer _bb, Ping obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Ping __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FbsGUID? ServerGuid { get { int o = __p.__offset(4); return o != 0 ? (FbsGUID?)(new FbsGUID()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public FbsGUID? KudoGuid { get { int o = __p.__offset(6); return o != 0 ? (FbsGUID?)(new FbsGUID()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public FbsDateTimeOffset? Now { get { int o = __p.__offset(8); return o != 0 ? (FbsDateTimeOffset?)(new FbsDateTimeOffset()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartPing(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddServerGuid(FlatBufferBuilder builder, Offset<FbsGUID> ServerGuidOffset) { builder.AddStruct(0, ServerGuidOffset.Value, 0); }
  public static void AddKudoGuid(FlatBufferBuilder builder, Offset<FbsGUID> KudoGuidOffset) { builder.AddStruct(1, KudoGuidOffset.Value, 0); }
  public static void AddNow(FlatBufferBuilder builder, Offset<FbsDateTimeOffset> NowOffset) { builder.AddStruct(2, NowOffset.Value, 0); }
  public static Offset<Ping> EndPing(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Ping>(o);
  }
};

