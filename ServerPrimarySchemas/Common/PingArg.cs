// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::FlatBuffers;

public struct PingArg : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PingArg GetRootAsPingArg(ByteBuffer _bb) { return GetRootAsPingArg(_bb, new PingArg()); }
  public static PingArg GetRootAsPingArg(ByteBuffer _bb, PingArg obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PingArg __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Dummy { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<PingArg> CreatePingArg(FlatBufferBuilder builder,
      int dummy = 0) {
    builder.StartObject(1);
    PingArg.AddDummy(builder, dummy);
    return PingArg.EndPingArg(builder);
  }

  public static void StartPingArg(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddDummy(FlatBufferBuilder builder, int dummy) { builder.AddInt(0, dummy, 0); }
  public static Offset<PingArg> EndPingArg(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PingArg>(o);
  }
};

